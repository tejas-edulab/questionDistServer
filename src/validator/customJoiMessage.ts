
export const customJOIMessages = {
    'string.base': 'Field {#key} must be a string',
    'string.empty': 'Field {#key} cannot be empty',
    'string.min': 'Field {#key} should have a minimum length of {#limit}',
    'string.max': 'Field {#key} should have a maximum length of {#limit}',
    'string.email': 'Field {#key} must be a valid email',
    'any.required': 'Field {#key} is required',
    'any.only': 'Field {#key} must be one of {#valids}',
    'number.base': 'Field {#key} must be a number',
    'number.empty': 'Field {#key} cannot be empty',
    'number.min': 'Field {#key} should have a minimum value of {#limit}',
    'number.max': 'Field {#key} should have a maximum value of {#limit}',
    'number.positive': 'Field {#key} should have a positive value',
    'number.negative': 'Field {#key} should have a negative value',
    'number.integer': 'Field {#key} should be an integer',
    'number.precision': 'Field {#key} should have {#limit} or fewer decimal places',
    'date.base': 'Field {#key} must be a date',
    'date.empty': 'Field {#key} cannot be empty',
    'date.min': 'Field {#key} should be greater than {#limit}',
    'date.max': 'Field {#key} should be less than {#limit}',
    'date.format': 'Field {#key} should be in {#format} format',
    'date.strict': 'Field {#key} should be a valid date',
    'date.ref': 'Field {#key} references {#ref}',
    'date.raw': 'Field {#key} contains an invalid value',
    'boolean.base': 'Field {#key} must be a boolean',
    'boolean.empty': 'Field {#key} cannot be empty',
    'array.base': 'Field {#key} must be an array',
    'array.empty': 'Field {#key} cannot be empty',
    'array.min': 'Field {#key} must have at least {#limit} items',
    'array.max': 'Field {#key} must have less than or equal to {#limit} items',
    'array.length': 'Field {#key} must have {#limit} items',
    'array.unique': 'Field {#key} must be unique',
    'array.ordered': 'Field {#key} must be in order {#order}',
    'array.ref': 'Field {#key} references {#ref}',
    'array.sparse': 'Field {#key} must not be a sparse array',
    'array.refType': 'Field {#key} must be a Joi reference',
    'object.base': 'Field {#key} must be an object',
    'object.empty': 'Field {#key} cannot be empty',
    'object.min': 'Field {#key} must have at least {#limit} children',
    'object.max': 'Field {#key} must have less than or equal to {#limit} children',
    'object.length': 'Field {#key} must have {#limit} children',
    'object.allowUnknown': 'Field {#key} contains an invalid value',
    'object.with': 'Field {#key} missing required peer {#peer}',
    'object.without': 'Field {#key} conflict with forbidden peer {#peer}',
    'object.missing': 'Field {#key} is required',
    'object.xor': 'Field {#key} contains a conflict between exclusive peers {#peers}',
    'object.or': 'Field {#key} contains a conflict between alternatives {#peers}',
    'object.and': 'Field {#key} contains {#present} without its required peers {#missing}',
    'object.nand': 'Field {#key} contains {#present} mutually exclusive with {#singles}',
    'object.assert': 'Field {#key} is invalid because {#ref} failed to {#message}',
    'object.rename.multiple': 'Field {#from} cannot rename child {#child} because multiple renames are disabled and another key was already renamed to {#to}',
    'object.rename.override': 'Field {#from} cannot rename child {#child} because override is disabled and target {#to} exists',
    'object.type': 'Field {#key} must be an instance of {#type}',
    'object.schema': 'Field {#key} must be a Joi instance',
    'object.refType': 'Field {#key} must be a Joi reference',
    'alternatives.base': 'Field {#key} contains an invalid value',
    'alternatives.types': 'Field {#key} must be one of {#types}',
    'alternatives.match': 'Field {#key} does not match any of the allowed types',
    'alternatives.one': 'Field {#key} contains an invalid value',
    'alternatives.ref': 'Field {#key} references {#ref}',
    'symbol.base': 'Field {#key} must be a symbol',
    'symbol.map': 'Field {#key} must be one of {#map}',
    'function.base': 'Field {#key} must be a Function',
    'function.arity': 'Field {#key} must have an arity of {#n}',
    'function.class': 'Field {#key} must be a class',
    'function.minArity': 'Field {#key} must have an arity greater or equal to {#n}',
    'function.maxArity': 'Field {#key} must have an arity lesser or equal to {#n}'
  }
  
  export default customJOIMessages;